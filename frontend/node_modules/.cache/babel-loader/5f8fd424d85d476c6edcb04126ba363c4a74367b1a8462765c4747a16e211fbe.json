{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sangm\\\\OneDrive - Brock University\\\\CenterEmbeddingForm\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport StudyIntroduction from './components/StudyIntroduction';\nimport SentenceDisplay from './components/SentenceDisplay';\nimport QuestionDisplay from './components/QuestionDisplay';\nimport ProgressBar from './components/ProgressBar';\nimport CompletionPage from './components/CompletionPage';\nimport { studyData } from './data/sentences';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\nfunction App() {\n  _s();\n  const [phase, setPhase] = useState('introduction'); // introduction, sentence, questions, complete\n  const [participantId, setParticipantId] = useState(null);\n  const [currentComplexityIndex, setCurrentComplexityIndex] = useState(0);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [responses, setResponses] = useState([]);\n  const currentSentenceData = studyData[currentComplexityIndex];\n  const currentQuestion = currentSentenceData === null || currentSentenceData === void 0 ? void 0 : currentSentenceData.questions[currentQuestionIndex];\n  const totalQuestions = studyData.reduce((total, level) => total + level.questions.length, 0);\n  const completedQuestions = responses.length;\n  const createParticipant = async () => {\n    try {\n      const response = await axios.post(`${API_URL}/api/study/participant`, {\n        demographics: {} // Add demographics collection if needed\n      });\n      return response.data.participantId;\n    } catch (error) {\n      console.error('Error creating participant:', error);\n      return null;\n    }\n  };\n  const saveResponse = async responseData => {\n    try {\n      await axios.post(`${API_URL}/api/study/response`, {\n        participantId,\n        complexityLevel: currentSentenceData.complexityLevel,\n        sentenceId: currentSentenceData.sentenceId,\n        ...responseData\n      });\n    } catch (error) {\n      console.error('Error saving response:', error);\n    }\n  };\n  const handleStartStudy = async () => {\n    const newParticipantId = await createParticipant();\n    if (newParticipantId) {\n      setParticipantId(newParticipantId);\n      setPhase('sentence');\n    }\n  };\n  const handleSentenceContinue = () => {\n    setPhase('questions');\n  };\n  const handleAnswer = async answerData => {\n    // Save response to backend\n    await saveResponse(answerData);\n\n    // Update local state\n    setResponses(prev => [...prev, answerData]);\n\n    // Move to next question or sentence\n    if (currentQuestionIndex < currentSentenceData.questions.length - 1) {\n      setCurrentQuestionIndex(prev => prev + 1);\n    } else {\n      // Move to next complexity level\n      if (currentComplexityIndex < studyData.length - 1) {\n        setCurrentComplexityIndex(prev => prev + 1);\n        setCurrentQuestionIndex(0);\n        setPhase('sentence');\n      } else {\n        // Study complete\n        setPhase('complete');\n      }\n    }\n  };\n  const renderCurrentPhase = () => {\n    switch (phase) {\n      case 'introduction':\n        return /*#__PURE__*/_jsxDEV(StudyIntroduction, {\n          onStart: handleStartStudy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 16\n        }, this);\n      case 'sentence':\n        return /*#__PURE__*/_jsxDEV(SentenceDisplay, {\n          sentence: currentSentenceData.sentence,\n          complexityLevel: currentSentenceData.complexityLevel,\n          onContinue: handleSentenceContinue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this);\n      case 'questions':\n        return /*#__PURE__*/_jsxDEV(QuestionDisplay, {\n          question: currentQuestion,\n          questionNumber: currentQuestionIndex + 1,\n          totalQuestions: currentSentenceData.questions.length,\n          onAnswer: handleAnswer,\n          complexityLevel: currentSentenceData.complexityLevel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this);\n      case 'complete':\n        return /*#__PURE__*/_jsxDEV(CompletionPage, {\n          participantId: participantId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(StudyIntroduction, {\n          onStart: handleStartStudy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [(phase === 'questions' || phase === 'sentence') && /*#__PURE__*/_jsxDEV(ProgressBar, {\n      current: completedQuestions,\n      total: totalQuestions,\n      label: \"Study Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: renderCurrentPhase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uWZniOFOYpfDb1SIKy700IMOoUk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","StudyIntroduction","SentenceDisplay","QuestionDisplay","ProgressBar","CompletionPage","studyData","jsxDEV","_jsxDEV","API_URL","process","env","REACT_APP_API_URL","App","_s","phase","setPhase","participantId","setParticipantId","currentComplexityIndex","setCurrentComplexityIndex","currentQuestionIndex","setCurrentQuestionIndex","responses","setResponses","currentSentenceData","currentQuestion","questions","totalQuestions","reduce","total","level","length","completedQuestions","createParticipant","response","post","demographics","data","error","console","saveResponse","responseData","complexityLevel","sentenceId","handleStartStudy","newParticipantId","handleSentenceContinue","handleAnswer","answerData","prev","renderCurrentPhase","onStart","fileName","_jsxFileName","lineNumber","columnNumber","sentence","onContinue","question","questionNumber","onAnswer","className","children","current","label","_c","$RefreshReg$"],"sources":["C:/Users/sangm/OneDrive - Brock University/CenterEmbeddingForm/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nimport StudyIntroduction from './components/StudyIntroduction';\r\nimport SentenceDisplay from './components/SentenceDisplay';\r\nimport QuestionDisplay from './components/QuestionDisplay';\r\nimport ProgressBar from './components/ProgressBar';\r\nimport CompletionPage from './components/CompletionPage';\r\n\r\nimport { studyData } from './data/sentences';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nfunction App() {\r\n  const [phase, setPhase] = useState('introduction'); // introduction, sentence, questions, complete\r\n  const [participantId, setParticipantId] = useState(null);\r\n  const [currentComplexityIndex, setCurrentComplexityIndex] = useState(0);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [responses, setResponses] = useState([]);\r\n\r\n  const currentSentenceData = studyData[currentComplexityIndex];\r\n  const currentQuestion = currentSentenceData?.questions[currentQuestionIndex];\r\n  const totalQuestions = studyData.reduce((total, level) => total + level.questions.length, 0);\r\n  const completedQuestions = responses.length;\r\n\r\n  const createParticipant = async () => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/api/study/participant`, {\r\n        demographics: {} // Add demographics collection if needed\r\n      });\r\n      return response.data.participantId;\r\n    } catch (error) {\r\n      console.error('Error creating participant:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const saveResponse = async (responseData) => {\r\n    try {\r\n      await axios.post(`${API_URL}/api/study/response`, {\r\n        participantId,\r\n        complexityLevel: currentSentenceData.complexityLevel,\r\n        sentenceId: currentSentenceData.sentenceId,\r\n        ...responseData\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving response:', error);\r\n    }\r\n  };\r\n\r\n  const handleStartStudy = async () => {\r\n    const newParticipantId = await createParticipant();\r\n    if (newParticipantId) {\r\n      setParticipantId(newParticipantId);\r\n      setPhase('sentence');\r\n    }\r\n  };\r\n\r\n  const handleSentenceContinue = () => {\r\n    setPhase('questions');\r\n  };\r\n\r\n  const handleAnswer = async (answerData) => {\r\n    // Save response to backend\r\n    await saveResponse(answerData);\r\n    \r\n    // Update local state\r\n    setResponses(prev => [...prev, answerData]);\r\n\r\n    // Move to next question or sentence\r\n    if (currentQuestionIndex < currentSentenceData.questions.length - 1) {\r\n      setCurrentQuestionIndex(prev => prev + 1);\r\n    } else {\r\n      // Move to next complexity level\r\n      if (currentComplexityIndex < studyData.length - 1) {\r\n        setCurrentComplexityIndex(prev => prev + 1);\r\n        setCurrentQuestionIndex(0);\r\n        setPhase('sentence');\r\n      } else {\r\n        // Study complete\r\n        setPhase('complete');\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderCurrentPhase = () => {\r\n    switch (phase) {\r\n      case 'introduction':\r\n        return <StudyIntroduction onStart={handleStartStudy} />;\r\n      \r\n      case 'sentence':\r\n        return (\r\n          <SentenceDisplay\r\n            sentence={currentSentenceData.sentence}\r\n            complexityLevel={currentSentenceData.complexityLevel}\r\n            onContinue={handleSentenceContinue}\r\n          />\r\n        );\r\n      \r\n      case 'questions':\r\n        return (\r\n          <QuestionDisplay\r\n            question={currentQuestion}\r\n            questionNumber={currentQuestionIndex + 1}\r\n            totalQuestions={currentSentenceData.questions.length}\r\n            onAnswer={handleAnswer}\r\n            complexityLevel={currentSentenceData.complexityLevel}\r\n          />\r\n        );\r\n      \r\n      case 'complete':\r\n        return <CompletionPage participantId={participantId} />;\r\n      \r\n      default:\r\n        return <StudyIntroduction onStart={handleStartStudy} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {(phase === 'questions' || phase === 'sentence') && (\r\n        <ProgressBar\r\n          current={completedQuestions}\r\n          total={totalQuestions}\r\n          label=\"Study Progress\"\r\n        />\r\n      )}\r\n      \r\n      <main className=\"main-content\">\r\n        {renderCurrentPhase()}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}