{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./App.css';import StudyIntroduction from'./components/StudyIntroduction';import SentenceDisplay from'./components/SentenceDisplay';import QuestionDisplay from'./components/QuestionDisplay';import ProgressBar from'./components/ProgressBar';import CompletionPage from'./components/CompletionPage';import{studyData}from'./data/sentences';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000';function App(){const[phase,setPhase]=useState('introduction');// introduction, sentence, questions, complete\nconst[participantId,setParticipantId]=useState(null);const[currentComplexityIndex,setCurrentComplexityIndex]=useState(0);const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[responses,setResponses]=useState([]);const currentSentenceData=studyData[currentComplexityIndex];const currentQuestion=currentSentenceData===null||currentSentenceData===void 0?void 0:currentSentenceData.questions[currentQuestionIndex];const totalQuestions=studyData.reduce((total,level)=>total+level.questions.length,0);const completedQuestions=responses.length;const createParticipant=async()=>{try{const response=await axios.post(`${API_URL}/api/study/participant`,{demographics:{}// Add demographics collection if needed\n});return response.data.participantId;}catch(error){console.error('Error creating participant:',error);return null;}};const saveResponse=async responseData=>{try{await axios.post(`${API_URL}/api/study/response`,{participantId,complexityLevel:currentSentenceData.complexityLevel,sentenceId:currentSentenceData.sentenceId,...responseData});}catch(error){console.error('Error saving response:',error);}};const handleStartStudy=async()=>{const newParticipantId=await createParticipant();if(newParticipantId){setParticipantId(newParticipantId);setPhase('sentence');}};const handleSentenceContinue=()=>{setPhase('questions');};const handleAnswer=async answerData=>{// Save response to backend\nawait saveResponse(answerData);// Update local state\nsetResponses(prev=>[...prev,answerData]);// Move to next question or sentence\nif(currentQuestionIndex<currentSentenceData.questions.length-1){setCurrentQuestionIndex(prev=>prev+1);}else{// Move to next complexity level\nif(currentComplexityIndex<studyData.length-1){setCurrentComplexityIndex(prev=>prev+1);setCurrentQuestionIndex(0);setPhase('sentence');}else{// Study complete\nsetPhase('complete');}}};const renderCurrentPhase=()=>{switch(phase){case'introduction':return/*#__PURE__*/_jsx(StudyIntroduction,{onStart:handleStartStudy});case'sentence':return/*#__PURE__*/_jsx(SentenceDisplay,{sentence:currentSentenceData.sentence,complexityLevel:currentSentenceData.complexityLevel,onContinue:handleSentenceContinue});case'questions':return/*#__PURE__*/_jsx(QuestionDisplay,{question:currentQuestion,questionNumber:currentQuestionIndex+1,totalQuestions:currentSentenceData.questions.length,onAnswer:handleAnswer,complexityLevel:currentSentenceData.complexityLevel,sentence:currentSentenceData.sentence});case'complete':return/*#__PURE__*/_jsx(CompletionPage,{participantId:participantId});default:return/*#__PURE__*/_jsx(StudyIntroduction,{onStart:handleStartStudy});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[(phase==='questions'||phase==='sentence')&&/*#__PURE__*/_jsx(ProgressBar,{current:completedQuestions,total:totalQuestions,label:\"Study Progress\"}),/*#__PURE__*/_jsx(\"main\",{className:\"main-content\",children:renderCurrentPhase()})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","StudyIntroduction","SentenceDisplay","QuestionDisplay","ProgressBar","CompletionPage","studyData","jsx","_jsx","jsxs","_jsxs","API_URL","process","env","REACT_APP_API_URL","App","phase","setPhase","participantId","setParticipantId","currentComplexityIndex","setCurrentComplexityIndex","currentQuestionIndex","setCurrentQuestionIndex","responses","setResponses","currentSentenceData","currentQuestion","questions","totalQuestions","reduce","total","level","length","completedQuestions","createParticipant","response","post","demographics","data","error","console","saveResponse","responseData","complexityLevel","sentenceId","handleStartStudy","newParticipantId","handleSentenceContinue","handleAnswer","answerData","prev","renderCurrentPhase","onStart","sentence","onContinue","question","questionNumber","onAnswer","className","children","current","label"],"sources":["C:/Users/sangm/OneDrive - Brock University/center-embedding-study/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nimport StudyIntroduction from './components/StudyIntroduction';\r\nimport SentenceDisplay from './components/SentenceDisplay';\r\nimport QuestionDisplay from './components/QuestionDisplay';\r\nimport ProgressBar from './components/ProgressBar';\r\nimport CompletionPage from './components/CompletionPage';\r\n\r\nimport { studyData } from './data/sentences';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n\r\nfunction App() {\r\n  const [phase, setPhase] = useState('introduction'); // introduction, sentence, questions, complete\r\n  const [participantId, setParticipantId] = useState(null);\r\n  const [currentComplexityIndex, setCurrentComplexityIndex] = useState(0);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [responses, setResponses] = useState([]);\r\n\r\n  const currentSentenceData = studyData[currentComplexityIndex];\r\n  const currentQuestion = currentSentenceData?.questions[currentQuestionIndex];\r\n  const totalQuestions = studyData.reduce((total, level) => total + level.questions.length, 0);\r\n  const completedQuestions = responses.length;\r\n\r\n  const createParticipant = async () => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/api/study/participant`, {\r\n        demographics: {} // Add demographics collection if needed\r\n      });\r\n      return response.data.participantId;\r\n    } catch (error) {\r\n      console.error('Error creating participant:', error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const saveResponse = async (responseData) => {\r\n    try {\r\n      await axios.post(`${API_URL}/api/study/response`, {\r\n        participantId,\r\n        complexityLevel: currentSentenceData.complexityLevel,\r\n        sentenceId: currentSentenceData.sentenceId,\r\n        ...responseData\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving response:', error);\r\n    }\r\n  };\r\n\r\n  const handleStartStudy = async () => {\r\n    const newParticipantId = await createParticipant();\r\n    if (newParticipantId) {\r\n      setParticipantId(newParticipantId);\r\n      setPhase('sentence');\r\n    }\r\n  };\r\n\r\n  const handleSentenceContinue = () => {\r\n    setPhase('questions');\r\n  };\r\n\r\n  const handleAnswer = async (answerData) => {\r\n    // Save response to backend\r\n    await saveResponse(answerData);\r\n    \r\n    // Update local state\r\n    setResponses(prev => [...prev, answerData]);\r\n\r\n    // Move to next question or sentence\r\n    if (currentQuestionIndex < currentSentenceData.questions.length - 1) {\r\n      setCurrentQuestionIndex(prev => prev + 1);\r\n    } else {\r\n      // Move to next complexity level\r\n      if (currentComplexityIndex < studyData.length - 1) {\r\n        setCurrentComplexityIndex(prev => prev + 1);\r\n        setCurrentQuestionIndex(0);\r\n        setPhase('sentence');\r\n      } else {\r\n        // Study complete\r\n        setPhase('complete');\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderCurrentPhase = () => {\r\n    switch (phase) {\r\n      case 'introduction':\r\n        return <StudyIntroduction onStart={handleStartStudy} />;\r\n      \r\n      case 'sentence':\r\n        return (\r\n          <SentenceDisplay\r\n            sentence={currentSentenceData.sentence}\r\n            complexityLevel={currentSentenceData.complexityLevel}\r\n            onContinue={handleSentenceContinue}\r\n          />\r\n        );\r\n      \r\n      case 'questions':\r\n        return (\r\n          <QuestionDisplay\r\n            question={currentQuestion}\r\n            questionNumber={currentQuestionIndex + 1}\r\n            totalQuestions={currentSentenceData.questions.length}\r\n            onAnswer={handleAnswer}\r\n            complexityLevel={currentSentenceData.complexityLevel}\r\n            sentence={currentSentenceData.sentence} \r\n          />\r\n        );\r\n      \r\n      case 'complete':\r\n        return <CompletionPage participantId={participantId} />;\r\n      \r\n      default:\r\n        return <StudyIntroduction onStart={handleStartStudy} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {(phase === 'questions' || phase === 'sentence') && (\r\n        <ProgressBar\r\n          current={completedQuestions}\r\n          total={totalQuestions}\r\n          label=\"Study Progress\"\r\n        />\r\n      )}\r\n      \r\n      <main className=\"main-content\">\r\n        {renderCurrentPhase()}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}