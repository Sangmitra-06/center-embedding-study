{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sangm\\\\OneDrive - Brock University\\\\CenterEmbeddingForm\\\\frontend\\\\src\\\\components\\\\QuestionDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useTimer } from '../hooks/useTimer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuestionDisplay = ({\n  question,\n  questionNumber,\n  totalQuestions,\n  onAnswer,\n  complexityLevel,\n  sentence\n}) => {\n  _s();\n  const [answer, setAnswer] = useState('');\n  const {\n    startTimer,\n    stopTimer,\n    resetTimer\n  } = useTimer();\n\n  // Debug logging\n  console.log('QuestionDisplay props:', {\n    question,\n    questionNumber,\n    totalQuestions,\n    complexityLevel,\n    sentence\n  });\n  useEffect(() => {\n    resetTimer();\n    startTimer();\n    console.log('Timer started for question:', question.id);\n    return () => {\n      resetTimer();\n    };\n  }, [question.id, resetTimer, startTimer]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (answer.trim()) {\n      const responseTime = stopTimer();\n      console.log('Response time calculated:', responseTime);\n      const answerData = {\n        questionId: question.id,\n        questionType: question.type,\n        answer: answer.trim(),\n        responseTime: Math.round(responseTime),\n        questionStartTime: performance.timeOrigin + (performance.now() - responseTime),\n        questionEndTime: performance.timeOrigin + performance.now()\n      };\n      console.log('Sending answer data:', answerData);\n      onAnswer(answerData);\n      setAnswer('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-display\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Complexity Level \", complexityLevel]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"question-counter\",\n        children: [\"Question \", questionNumber, \" of \", totalQuestions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'yellow',\n        border: '3px solid red',\n        padding: '20px',\n        margin: '20px 0'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          color: 'black'\n        },\n        children: \"DEBUG - Sentence:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'black',\n          fontSize: '16px',\n          fontWeight: 'bold'\n        },\n        children: sentence || 'NO SENTENCE RECEIVED'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"question-text\",\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: answer,\n          onChange: e => setAnswer(e.target.value),\n          placeholder: \"Enter your answer here...\",\n          className: \"answer-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submit-answer-button\",\n          children: \"Submit Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(QuestionDisplay, \"UV9Cqr4qqfMH20Tz1l1qVX2hCoE=\", false, function () {\n  return [useTimer];\n});\n_c = QuestionDisplay;\nexport default QuestionDisplay;\nvar _c;\n$RefreshReg$(_c, \"QuestionDisplay\");","map":{"version":3,"names":["React","useState","useEffect","useTimer","jsxDEV","_jsxDEV","QuestionDisplay","question","questionNumber","totalQuestions","onAnswer","complexityLevel","sentence","_s","answer","setAnswer","startTimer","stopTimer","resetTimer","console","log","id","handleSubmit","e","preventDefault","trim","responseTime","answerData","questionId","questionType","type","Math","round","questionStartTime","performance","timeOrigin","now","questionEndTime","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","border","padding","margin","color","fontSize","fontWeight","onSubmit","value","onChange","target","placeholder","required","_c","$RefreshReg$"],"sources":["C:/Users/sangm/OneDrive - Brock University/CenterEmbeddingForm/frontend/src/components/QuestionDisplay.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useTimer } from '../hooks/useTimer';\r\n\r\nconst QuestionDisplay = ({ \r\n  question, \r\n  questionNumber, \r\n  totalQuestions, \r\n  onAnswer, \r\n  complexityLevel,\r\n  sentence \r\n}) => {\r\n  const [answer, setAnswer] = useState('');\r\n  const { startTimer, stopTimer, resetTimer } = useTimer();\r\n\r\n  // Debug logging\r\n  console.log('QuestionDisplay props:', {\r\n    question,\r\n    questionNumber,\r\n    totalQuestions,\r\n    complexityLevel,\r\n    sentence\r\n  });\r\n\r\n  useEffect(() => {\r\n    resetTimer();\r\n    startTimer();\r\n    console.log('Timer started for question:', question.id);\r\n    \r\n    return () => {\r\n      resetTimer();\r\n    };\r\n  }, [question.id, resetTimer, startTimer]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (answer.trim()) {\r\n      const responseTime = stopTimer();\r\n      console.log('Response time calculated:', responseTime);\r\n      \r\n      const answerData = {\r\n        questionId: question.id,\r\n        questionType: question.type,\r\n        answer: answer.trim(),\r\n        responseTime: Math.round(responseTime),\r\n        questionStartTime: performance.timeOrigin + (performance.now() - responseTime),\r\n        questionEndTime: performance.timeOrigin + performance.now()\r\n      };\r\n      \r\n      console.log('Sending answer data:', answerData);\r\n      onAnswer(answerData);\r\n      setAnswer('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"question-display\">\r\n      <div className=\"question-header\">\r\n        <h3>Complexity Level {complexityLevel}</h3>\r\n        <p className=\"question-counter\">\r\n          Question {questionNumber} of {totalQuestions}\r\n        </p>\r\n      </div>\r\n      \r\n      {/* Debug version - very visible */}\r\n      <div style={{\r\n        backgroundColor: 'yellow',\r\n        border: '3px solid red',\r\n        padding: '20px',\r\n        margin: '20px 0'\r\n      }}>\r\n        <h4 style={{color: 'black'}}>DEBUG - Sentence:</h4>\r\n        <p style={{color: 'black', fontSize: '16px', fontWeight: 'bold'}}>\r\n          {sentence || 'NO SENTENCE RECEIVED'}\r\n        </p>\r\n      </div>\r\n      \r\n      <div className=\"question-container\">\r\n        <h4 className=\"question-text\">{question.question}</h4>\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n          <textarea\r\n            value={answer}\r\n            onChange={(e) => setAnswer(e.target.value)}\r\n            placeholder=\"Enter your answer here...\"\r\n            className=\"answer-input\"\r\n            required\r\n          />\r\n          \r\n          <button type=\"submit\" className=\"submit-answer-button\">\r\n            Submit Answer\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuestionDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}